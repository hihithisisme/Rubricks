module hardcode_screen (
    input screen[8],
    output out[6][8]
  ) {
  
  always {
    out = 6x{{8b0}};
    case(screen){
    8b1: out = {8b100,8b01111110,8b0,8b100,8b01111110,8b0};                            // 1: ONE
    8b10: out = {8b01100110,8b01010010,8b01001110,8b01100110,8b01010010,8b01001110};   // 10: TWO
    8b11: out = {8b00100010,8b01001010,8b00110110,8b100010,8b01001010,8b00110110};     // 11: THREE
    //8b100: out = {8b100,8b01111110,8b100,8b100,8b01111110,8b100};                    // 100: ARROW_UP
    8b100: out = {8b00100100,8b01001000,8b00100100,8b00100100,8b01001000,8b00100100};  // 100: ARROW_UP
    8b101: out = {8b01100110,8b00011000,8b01100110,8b01100110,8b00011000,8b01100110};  // 101: CROSS
    8b110: out = {8b00101000,8b00101000,8b00101000,8b00010100,8b00010100,8b00010100};  // 110: EQUAL
    8b111: out = {8b01100110,8b00011000,8b01100110,8b01111110,8b01000010,8b01111110}; // 111: CROSS for P1, CIRCLE for P2
    default: out = 6x{{8b0}};
    }
  }
}
